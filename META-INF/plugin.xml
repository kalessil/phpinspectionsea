<idea-plugin version="2">
  <id>com.kalessil.phpStorm.phpInspectionsEA</id>
  <name>Php Inspections (EA Extended)</name>
  <version>2.3.7</version>
  <vendor email="kalessil@gmail.com">Vladimir Reznichenko</vendor>

  <depends>com.jetbrains.php</depends>
  <depends>com.intellij.modules.platform</depends>

  <!-- http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html for description -->
  <idea-version since-build="162.1889" />
  <!-- SDKs:
     162.1889                           -> PhpStorm 2016.2.1

    141.2462 — 141.2462  PS 9.0.2      -> 1.3.9   [ok]
    143.382  — 143.382   PS 10.0.1     -> 1.3.9.1 [ok]
    143.1184 — 143.1184  PS 10.0.2     -> 1.3.9.2 [ok]

    143.1480 — *         PS 10.0.3/EAP -> 1.3.10  [ok]
    138.2001 — 138.2001  PS 8.0.3      -> not supported anymore (PHP 7 related classes)
  -->

  <description><![CDATA[
For support and donations please visit <a href="https://github.com/kalessil/phpinspectionsea">Github</a> | <a href="https://github.com/kalessil/phpinspectionsea/issues">Issues</a> | <a href="https://www.paypal.me/VReznichenko">PayPal</a>.<br />
<br />
Please follow me at <a href="https://twitter.com/kalessil">twitter</a> for status updates.<br />
<br />
This plugin is a Static Code Analysis tool for PHP (aka inspections in JetBrains products).<br />
<br />
It covers:<br />
- architecture related issues (e.g. design pattern violations)<br />
- weak types control and possible code construct simplifications<br />
- performance issues<br />
- non-optimal, duplicate and suspicious "if" conditions<br />
- validation of magic methods usage<br />
- regular expressions<br />
- validation of exception handling workflow<br />
- compatibility issues<br />
- variety of time-consuming bugs<br />
- PhpUnit API usage<br />
- security issues<br />
<br />
Some of inspections are expecting conditional statements (e.g. "if") to use
group statement for wrapping body expressions. If this requirement is met
then additional inspections are applied to the source code.<br />
<br />
For Mac shortcuts, see <a href="https://www.jetbrains.com/phpstorm/help/keyboard-shortcuts-and-mouse-reference.html">this reference card</a>. Windows/Linux ones are:<br />
<b>Alt + Shift + I</b> to <b>inspect current file</b> with current profile<br />
<b>Ctrl + Alt + Shift + I</b> to <b>run inspection by name</b><br />
<b>Ctrl + Shift + F4</b> to <b>close results</b> of inspection.<br />
<br />
On some projects CPU and therefore battery usage could be intensive, so it should be taken into account when traveling
with a laptop.
    ]]></description>

  <change-notes><![CDATA[
Thank you for supporting our crowdfunding campaign!
We keep delivering funded results =)
<br/>
<br/>
- Documentation and reporting enhancements<br/>
- Callable parameter usage violates definition: resolved false-positives (iterable)<br/>
- Foreach source to iterate over: resolved false-positives (iterable type)<br/>
- Long inheritance chain: resolved false-positives (DDD-named exceptions, Phalcon framework)<br/>
- 'substr(...)' used as index-based access: resolved false-positives (mb_substr)<br/>
<br/>
- Child method is exactly the same: implemented QFes<br/>
- Insecure 'uniqid(...)' usage: new patterns<br/>
- General '\Exception' is thrown: QF implemented<br/>
- PDO API usage: re-worked, added QFes<br/>
- Suspicious returns: new patterns<br/>
- Suspicious binary operations: new patterns<br/>
- 'array_unique(...)' low performing usage: added QFes<br/>
- 'file_put_contents(...)' misused: added QF<br/>
- 'strtotime(...)' misused: added QFes<br/>
- ::class can be used: new patterns<br/>
<br/>
- Callable methods validity: implemented<br/>
- Empty/isset results correctness: implemented<br/>
- Null coalescing operator variable existence: implemented<br/>
- 'strncmp(...)/strncasecmp(...)' could be replaced with 'strpos(...)/stripos(...)': dropped<br/>
<br/>
<hr/>
  ]]></change-notes>

  <!-- please see http://confluence.jetbrains.com/display/IDEADEV/Plugin+Compatibility+with+IntelliJ+Platform+Products
       on how to target different products -->
  <!-- uncomment to enable plugin in all products
  <depends>com.intellij.modules.lang</depends>
  -->

  <extensions defaultExtensionNs="com.intellij">
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="AmbiguousMethodsCallsInArrayMappingInspection" displayName="Non-optimized arrays mapping"
        groupName="Performance"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeSmell.AmbiguousMethodsCallsInArrayMappingInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="StrlenInEmptyStringCheckContextInspection"     displayName="'(mb_)strlen(...)' misused"
        groupName="Performance"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalTransformations.StrlenInEmptyStringCheckContextInspection"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ArrayCastingEquivalentInspection"              displayName="Could be replaced with '(array) ...'"
        groupName="Performance"                                   enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalTransformations.ArrayCastingEquivalentInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="CallableInLoopTerminationConditionInspection"  displayName="Callable calls in loops termination condition"
        groupName="Performance"                                   enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.CallableInLoopTerminationConditionInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="SlowArrayOperationsInLoopInspection"           displayName="Slow array function used in loop"
        groupName="Performance"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.arrays.SlowArrayOperationsInLoopInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="StrStrUsedAsStrPosInspection"                  displayName="'str(i)str(...)' could be replaced with 'str(i)pos(...)'"
        groupName="Performance"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.strings.StrStrUsedAsStrPosInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="CaseInsensitiveStringFunctionsMissUseInspection" displayName="'stristr(...)/stripos(...)/strripos(...)' could be replaced with 'strstr(...)/strpos()/strrpos()'"
        groupName="Performance"                                     enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.strings.CaseInsensitiveStringFunctionsMissUseInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="AlterInForeachInspection"                      displayName="Slow alter in foreach"
        groupName="Performance"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.forEach.AlterInForeachInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="CascadeStringReplacementInspection"            displayName="Cascading 'str_replace(...)' calls"
        groupName="Performance"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.strings.CascadeStringReplacementInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="InArrayMissUseInspection"                      displayName="'in_array(...)' misused"
        groupName="Performance"                                   enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.arrays.InArrayMissUseInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="LowPerformanceArrayUniqueUsageInspection"      displayName="'array_unique(...)' low performing usage"
        groupName="Performance"                                   enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.arrays.LowPerformanceArrayUniqueUsageInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ArrayPushMissUseInspection"                    displayName="'array_push(...)' misused"
        groupName="Performance"                                   enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.arrays.ArrayPushMissUseInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="FileFunctionMissUseInspection"                 displayName="'file(...)' misused"
        groupName="Performance"                                   enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.fileSystem.FileFunctionMissUseInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="FilePutContentsMissUseInspection"              displayName="'file_put_contents(...)' misused"
        groupName="Performance"                                   enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.fileSystem.FilePutContentsMissUseInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="NotOptimalRegularExpressionsInspection"        displayName="Non-optimal regular expression"
        groupName="Performance"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.regularExpressions.NotOptimalRegularExpressionsInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="VariableFunctionsUsageInspection"              displayName="Variable functions usage"
        groupName="Performance"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.VariableFunctionsUsageInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="SubStrShortHandUsageInspection"                displayName="'substr(...)' short-hand usage"
        groupName="Performance"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.strings.SubStrShortHandUsageInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="SubStrUsedAsArrayAccessInspection"             displayName="'substr(...)' used as index-based access"
        groupName="Performance"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.strings.SubStrUsedAsArrayAccessInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="StrtotimeUsageInspection"                      displayName="'strtotime(...)' misused"
        groupName="Performance"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.dateTime.StrtotimeUsageInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="StaticLocalVariablesUsageInspection"           displayName="Static local variables usage"
        groupName="Performance"                                   enabledByDefault="false" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.StaticLocalVariablesUsageInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="PackedHashtableOptimizationInspection"         displayName="Packed hashtable optimizations"
        groupName="Performance"                                   enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.PackedHashtableOptimizationInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="UnqualifiedReferenceInspection"                displayName="Unqualified function/constant reference"
        groupName="Performance"                                   enabledByDefault="false" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.UnqualifiedReferenceInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ExplodeMissUseInspection"                      displayName="'explode(...)' misused"
        groupName="Performance"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.ExplodeMissUseInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ScandirUsageInspection"                        displayName="'scandir(...)' low performing usage"
        groupName="Performance"                                   enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.ScandirUsageInspector"/>


    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="IsEmptyFunctionUsageInspection"                displayName="'empty(...)' usage"
        groupName="Type compatibility"                            enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.IsEmptyFunctionUsageInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="TypeUnsafeComparisonInspection"                displayName="Type unsafe comparison"
        groupName="Type compatibility"                            enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.TypeUnsafeComparisonInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="TypeUnsafeArraySearchInspection"               displayName="'in_array(...)', 'array_search(...)' type unsafe usage"
        groupName="Type compatibility"                            enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.arrays.TypeUnsafeArraySearchInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ArrayTypeOfParameterByDefaultValueInspection"  displayName="Parameter could be declared as array"
        groupName="Type compatibility"                            enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.strictInterfaces.ArrayTypeOfParameterByDefaultValueInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ForeachSourceInspection"                       displayName="Foreach source to iterate over"
        groupName="Type compatibility"                            enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.forEach.ForeachSourceInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="GenericObjectTypeUsageInspection"              displayName="Usage of object type in PhpDoc"
        groupName="Type compatibility"                            enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.phpDoc.GenericObjectTypeUsageInspector"/>


    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="UnSafeIsSetOverArrayInspection"                displayName="'isset(...)' usage"
        groupName="Control Flow"                                  enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.UnSafeIsSetOverArrayInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="TernaryOperatorSimplifyInspection"             displayName="Ternary operator could be simplified"
        groupName="Control Flow"                                  enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.TernaryOperatorSimplifyInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="IfReturnReturnSimplificationInspection"        displayName="If-return-return could be simplified"
        groupName="Control Flow"                                  enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.ifs.IfReturnReturnSimplificationInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="DefaultValueInElseBranchInspection"            displayName="Default value is hidden in else branch"
        groupName="Control Flow"                                  enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalTransformations.DefaultValueInElseBranchInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="NotOptimalIfConditionsInspection"              displayName="Non-optimal if conditions"
        groupName="Control Flow"                                  enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.ifs.NotOptimalIfConditionsInspection"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="LoopWhichDoesNotLoopInspection"                displayName="Loop which does not loop"
        groupName="Control Flow"                                  enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.LoopWhichDoesNotLoopInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ThrowRawExceptionInspection"                   displayName="General '\Exception' is thrown"
        groupName="Control Flow"                                  enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.ThrowRawExceptionInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="DisconnectedForeachInstructionInspection"      displayName="Statement could be decoupled from foreach"
        groupName="Control Flow"                                  enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.forEach.DisconnectedForeachInstructionInspector"/>
  <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ExceptionsAnnotatingAndHandlingInspection"      displayName="Exceptions handling and annotating"
        groupName="Control Flow"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.exceptions.ExceptionsAnnotatingAndHandlingInspector"/>
  <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="DegradedSwitchInspection"                       displayName="Switch-case could be simplified"
        groupName="Control Flow"                                   enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalTransformations.DegradedSwitchInspector"/>
  <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ForeachInvariantsInspection"                    displayName="Foreach usage possible"
        groupName="Control Flow"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.forEach.ForeachInvariantsInspector"/>
  <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="OneTimeUseVariablesInspection"                  displayName="One-time use variables"
        groupName="Control Flow"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.OneTimeUseVariablesInspector"/>
  <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="PdoApiUsageInspection"                          displayName="PDO API usage"
        groupName="Control Flow"                                   enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.pdo.PdoApiUsageInspector"/>
  <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="MultiAssignmentUsageInspection"                 displayName="'list(...) = ' usage possible"
        groupName="Control Flow"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.MultiAssignmentUsageInspector"/>
  <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
         shortName="GetTypeMissUseInspection"                      displayName="'gettype(...)' could be replaced with 'is_*(...)'"
         groupName="Control Flow"                                  enabledByDefault="true" level="WARNING"
         implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.GetTypeMissUseInspector"/>
  <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
         shortName="ArraySearchUsedAsInArrayInspection"            displayName="'array_search(...)' could be replaced by 'in_array(...)'"
         groupName="Control Flow"                                  enabledByDefault="true" level="WARNING"
         implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.arrays.ArraySearchUsedAsInArrayInspector"/>
  <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
         shortName="SequentialUnSetCallsInspection"                displayName="'unset(...)' calls could be merged"
         groupName="Control Flow"                                  enabledByDefault="true" level="WEAK WARNING"
         implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.SequentialUnSetCallsInspector"/>
  <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
         shortName="StrTrUsageAsStrReplaceInspection"              displayName="'strtr(...)' could be replaced with 'str_replace(...)'"
         groupName="Control Flow"                                  enabledByDefault="true" level="WEAK WARNING"
         implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.strings.StrTrUsageAsStrReplaceInspector"/>
  <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
         shortName="SubStrUsedAsStrPosInspection"                  displayName="'substr(...)' could be replaced with 'strpos(...)'"
         groupName="Control Flow"                                  enabledByDefault="true" level="WEAK WARNING"
         implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.strings.SubStrUsedAsStrPosInspector"/>
  <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
         shortName="RedundantElseClauseInspection"                 displayName="Redundant 'else' keyword"
         groupName="Control Flow"                                  enabledByDefault="true" level="WARNING"
         implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.RedundantElseClauseInspector"/>
  <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
         shortName="StringNormalizationInspection"                 displayName="Strings normalization"
         groupName="Control Flow"                                  enabledByDefault="true" level="WEAK WARNING"
         implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.strings.StringNormalizationInspector"/>


  <!--localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
       shortName="ArrayFunctionsInvariantsInspection"             displayName="Foreach behaves as an array function"
       groupName="Control Flow"                                   enabledByDefault="true" level="WARNING"
       implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.forEach.ArrayFunctionsInvariantsInspector"/-->


    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ForgottenDebugOutputInspection"                displayName="Forgotten debug statements"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.debug.ForgottenDebugOutputInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="AdditionOperationOnArraysInspection"           displayName="Addition operator used on arrays"
        groupName="Probable bugs"                                 enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.AdditionOperationOnArraysInspection"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="MagicMethodsValidityInspection"                displayName="Magic methods validity"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.magicMethods.MagicMethodsValidityInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="SuspiciousLoopInspection"                      displayName="Suspicious loop"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.SuspiciousLoopInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ReferenceMismatchInspection"                   displayName="Reference mismatch"
        groupName="Probable bugs"                                 enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.byReference.ReferenceMismatchInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ImplicitMagicMethodCallInspection"             displayName="Implicit magic method calls"
        groupName="Probable bugs"                                 enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.magicMethods.ImplicitMagicMethodCallInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="SwitchContinuationInLoopInspection"            displayName="Continue misbehaviour in switch"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.SwitchContinuationInLoopInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="PrintfScanfArgumentsInspection"                displayName="*printf/*scanf arguments count mismatches"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.PrintfScanfArgumentsInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="RealpathInSteamContextInspection"              displayName="Phar-incompatible 'realpath(...)' usage"
        groupName="Probable bugs"                                 enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.fileSystem.RealpathInSteamContextInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="OffsetOperationsInspection"                    displayName="Array and string offset validity"
        groupName="Probable bugs"                                 enabledByDefault="false" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.OffsetOperationsInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="SummerTimeUnsafeTimeManipulationInspection"    displayName="Summer-time unsafe date manipulations"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.SummerTimeUnsafeTimeManipulationInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="MkdirRaceConditionInspection"                  displayName="'mkdir(...)' race condition"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.MkdirRaceConditionInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="InconsistentQueryBuildInspection"              displayName="Inconsistent 'http_build_query(...)' result"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.InconsistentQueryBuildInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="IncorrectRandomRangeInspection"                displayName="Incorrect random generation range"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.IncorrectRandomRangeInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="SuspiciousSemicolonInspection"                 displayName="Suspicious semicolon"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.SuspiciousSemicolonInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="CompactArgumentsInspection"                    displayName="'compact(...)' variables existence"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.CompactArgumentsInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="UsingInclusionOnceReturnValueInspection"       displayName="Suspicious usage of include_once/require_once return value"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.UsingInclusionOnceReturnValueInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="DateIntervalSpecificationInspection"           displayName="Date interval specification validity"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.dateTime.DateIntervalSpecificationInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="PregQuoteUsageInspection"                      displayName="Proper preg_quote(...) usage"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.PregQuoteUsageInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="SuspiciousAssignmentsInspection"               displayName="Suspicious assignments"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.suspiciousAssignments.SuspiciousAssignmentsInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="DateTimeConstantsUsageInspection"              displayName="DateTime constants usage validity"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.dateTime.DateTimeConstantsUsageInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="SuspiciousReturnInspection"                    displayName="Suspicious returns"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.SuspiciousReturnInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="SuspiciousBinaryOperationInspection"           displayName="Suspicious binary operations"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.binaryOperations.SuspiciousBinaryOperationInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="IncompleteThrowStatementsInspection"           displayName="Incomplete throw statements"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.exceptions.IncompleteThrowStatementsInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="TraitsPropertiesConflictsInspection"           displayName="Traits properties conflicts resolution"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.TraitsPropertiesConflictsInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="AutoloadingIssuesInspection"                   displayName="Class autoloading correctness"
        groupName="Probable bugs"                                 enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.classes.AutoloadingIssuesInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="NullPointerExceptionInspection"                displayName="Null pointer exceptions prevention"
        groupName="Probable bugs"                                 enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.npe.NullPointerExceptionInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="NullCoalescingArgumentExistenceInspection"     displayName="Null coalescing operator variable existence"
        groupName="Probable bugs"                                 enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.nullCoalescing.NullCoalescingArgumentExistenceInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="MissingIssetImplementationInspection"          displayName="Empty/isset results correctness"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.classes.MissingIssetImplementationInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="CallableMethodValidityInspection"              displayName="Callable methods validity"
        groupName="Probable bugs"                                 enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.classes.CallableMethodValidityInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="PassingByReferenceCorrectnessInspection"       displayName="Passing arguments by reference correctness"
        groupName="Probable bugs"                                 enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.byReference.PassingByReferenceCorrectnessInspector"/>


    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
         shortName="NonSecureUniqidUsageInspection"                displayName="Insecure 'uniqid(...)' usage (Insufficient Entropy Vulnerability)"
         groupName="Security"                                      enabledByDefault="true" level="ERROR"
         implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.security.NonSecureUniqidUsageInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
         shortName="NonSecureParseStrUsageInspection"              displayName="Insecure 'parse_str(...)' usage (Variable extract Vulnerability)"
         groupName="Security"                                      enabledByDefault="true" level="ERROR"
         implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.security.NonSecureParseStrUsageInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
         shortName="NonSecureExtractUsageInspection"               displayName="Insecure 'extract(...)' usage (Variable extract Vulnerability)"
         groupName="Security"                                      enabledByDefault="true" level="ERROR"
         implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.security.NonSecureExtractUsageInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
         shortName="UntrustedInclusionInspection"                  displayName="Untrusted files inclusion"
         groupName="Security"                                      enabledByDefault="true" level="ERROR"
         implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.security.UntrustedInclusionInspector"/>
    <localInspection language="JSON" groupPath="PHP,Php Inspections (EA Extended)"
         shortName="SecurityAdvisoriesInspection"                  displayName="Security advisories for Composer packages (Components Firewall)"
         groupName="Security"                                      enabledByDefault="true" level="WARNING"
         implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.security.SecurityAdvisoriesInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
         shortName="CurlSslServerSpoofingInspection"               displayName="CURL: SSL server spoofing (SSL MITM and Spoofing Attacks)"
         groupName="Security"                                      enabledByDefault="true" level="ERROR"
         implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.security.CurlSslServerSpoofingInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
         shortName="EncryptionInitializationVectorRandomnessInspection" displayName="Encryption initialization vector randomness"
         groupName="Security"                                           enabledByDefault="true" level="ERROR"
         implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.security.EncryptionInitializationVectorRandomnessInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
         shortName="UnserializeExploitsInspection"                 displayName="Exploiting unserialize (PHP Object Injection Vulnerability)"
         groupName="Security"                                      enabledByDefault="true" level="ERROR"
         implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.security.UnserializeExploitsInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
         shortName="PotentialMalwareInspection"                    displayName="Basic malware patterns"
         groupName="Security"                                      enabledByDefault="true" level="ERROR"
         implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.security.PotentialMalwareInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
         shortName="CryptographicallySecureRandomnessInspection"   displayName="Cryptographically secure randomness"
         groupName="Security"                                      enabledByDefault="true" level="ERROR"
         implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.security.CryptographicallySecureRandomnessInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
         shortName="CryptographicallySecureAlgorithms"             displayName="Cryptographically secure algorithms"
         groupName="Security"                                      enabledByDefault="true" level="ERROR"
         implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.security.CryptographicallySecureAlgorithmsInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
         shortName="NonSecureCryptUsageInspection"                 displayName="Insecure 'crypt(...)' usage (Cryptographically weak algorithms)"
         groupName="Security"                                      enabledByDefault="true" level="ERROR"
         implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.security.NonSecureCryptUsageInspector"/>


    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="PhpUnitTestsInspection"                        displayName="PhpUnit: bugs and best practices"
        groupName="PhpUnit"                                       enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.phpUnit.PhpUnitTestsInspector"/>


    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="SenselessTernaryOperatorInspection"            displayName="Suspicious ternary operator"
        groupName="Confusing constructs"                          enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalTransformations.SenselessTernaryOperatorInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ClassMethodNameMatchesFieldNameInspection"     displayName="Method name matches existing field name"
        groupName="Confusing constructs"                          enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.classes.ClassMethodNameMatchesFieldNameInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="NestedTernaryOperatorInspection"               displayName="Nested ternary operator"
        groupName="Confusing constructs"                          enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalTransformations.NestedTernaryOperatorInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="UselessReturnInspection"                       displayName="Useless return"
        groupName="Confusing constructs"                          enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.UselessReturnInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ParameterByRefWithDefaultInspection"           displayName="Parameter passed by reference has default value"
        groupName="Confusing constructs"                          enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.byReference.ParameterByRefWithDefaultInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ReferencingObjectsInspection"                  displayName="Referencing objects"
        groupName="Confusing constructs"                          enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeSmell.ReferencingObjectsInspector"/>


    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="OnlyWritesOnParameterInspection"               displayName="Parameter/variable is not used"
        groupName="Unused"                                        enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.OnlyWritesOnParameterInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="PropertyInitializationFlawsInspection"         displayName="Class property initialization flaws"
        groupName="Unused"                                        enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.PropertyInitializationFlawsInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="UselessUnsetInspection"                        displayName="Useless unset"
        groupName="Unused"                                        enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.UselessUnsetInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="UnusedConstructorDependenciesInspection"       displayName="Unused constructor dependencies"
        groupName="Unused"                                        enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.classes.UnusedConstructorDependenciesInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="SenselessProxyMethodInspection"                displayName="Senseless proxy function"
        groupName="Unused"                                        enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.classes.SenselessProxyMethodInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="SenselessMethodDuplicationInspection"          displayName="Child method is exactly the same"
        groupName="Unused"                                        enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.classes.SenselessMethodDuplicationInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="UnusedGotoLabelInspection"                     displayName="Unused goto labels"
        groupName="Unused"                                        enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeSmell.UnusedGotoLabelInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ArgumentEqualsDefaultValueInspection"          displayName="Unnecessary arguments specification"
        groupName="Unused"                                        enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeSmell.ArgumentEqualsDefaultValueInspector"/>


    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="UnNecessaryDoubleQuotesInspection"             displayName="Unnecessary double quotes"
        groupName="Code Style"                                    enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeSmell.UnNecessaryDoubleQuotesInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="MissingOrEmptyGroupStatementInspection"        displayName="Missing or empty conditionals group statement"
        groupName="Code Style"                                    enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeSmell.MissingOrEmptyGroupStatementInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="SenselessCommaInArrayDefinitionInspection"     displayName="Unnecessary last comma in array definition"
        groupName="Code Style"                                    enabledByDefault="false" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeSmell.SenselessCommaInArrayDefinitionInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="AccessModifierPresentedInspection"             displayName="Access modifiers shall be defined"
        groupName="Code Style"                                    enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.classes.AccessModifierPresentedInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="PrefixedIncDecrementEquivalentInspection"      displayName="Prefixed increment/decrement equivalent"
        groupName="Code Style"                                    enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalTransformations.PrefixedIncDecrementEquivalentInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="CallableReferenceNameMismatchInspection"       displayName="Callable name case mismatched in a call"
        groupName="Code Style"                                    enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeSmell.CallableReferenceNameMismatchInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="NestedPositiveIfStatementsInspection"          displayName="Nested positive ifs"
        groupName="Code Style"                                    enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.ifs.NestedPositiveIfStatementsInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="StaticInvocationViaThisInspection"             displayName="Static methods invocation via '->'"
        groupName="Code Style"                                    enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.StaticInvocationViaThisInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="DynamicInvocationViaScopeResolutionInspection" displayName="Dynamic methods invocation via '::'"
        groupName="Code Style"                                    enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.DynamicInvocationViaScopeResolutionInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="NestedNotOperatorsInspection"                  displayName="Nested not operators usage"
        groupName="Code Style"                                    enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeSmell.NestedNotOperatorsInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="UnnecessaryParenthesesInspection"              displayName="Unnecessary parentheses"
        groupName="Code Style"                                    enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeSmell.UnnecessaryParenthesesInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="UnnecessarySemicolonInspection"                displayName="Unnecessary semicolon"
        groupName="Code Style"                                    enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeSmell.UnnecessarySemicolonInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="UnnecessaryUseAliasInspection"                 displayName="Unnecessary use aliases"
        groupName="Code Style"                                    enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeSmell.UnnecessaryUseAliasInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="UsingInclusionReturnValueInspection"           displayName="Usage of inclusion return value"
        groupName="Code Style"                                    enabledByDefault="false" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeSmell.UsingInclusionReturnValueInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="OpAssignShortSyntaxInspection"                 displayName="Short syntax for applied operation"
        groupName="Code Style"                                    enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.OpAssignShortSyntaxInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="UnnecessaryFinalModifierInspection"            displayName="Unnecessary final modifiers"
        groupName="Code Style"                                    enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeSmell.UnnecessaryFinalModifierInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="UnknownInspectionInspection"                   displayName="Unknown inspection suppression"
        groupName="Code Style"                                    enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.phpDoc.UnknownInspectionInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ShortOpenTagUsageInspection"                   displayName="PHP short open tag usage"
        groupName="Code Style"                                    enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeSmell.ShortOpenTagUsageInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ComparisonOperandsOrderInspection"             displayName="Yoda/regular conditions style usage"
        groupName="Code Style"                                    enabledByDefault="false" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeSmell.ComparisonOperandsOrderInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ParameterDefaultValueIsNotNullInspection"      displayName="Non-null parameters default value"
        groupName="Code Style"                                    enabledByDefault="false" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeSmell.ParameterDefaultValueIsNotNullInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="DisallowWritingIntoStaticPropertiesInspection" displayName="Disallow writing into static properties"
        groupName="Code Style"                                    enabledByDefault="false" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeSmell.DisallowWritingIntoStaticPropertiesInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="UsageOfSilenceOperatorInspection"              displayName="Usage of the silence operator"
        groupName="Code Style"                                    enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeSmell.UsageOfSilenceOperatorInspector"/>


    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ElvisOperatorCanBeUsedInspection"              displayName="Elvis operator can be used"
        groupName="Language level migration"                      enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.ElvisOperatorCanBeUsedInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="NullCoalescingOperatorCanBeUsedInspection"     displayName="Null coalescing operator can be used"
        groupName="Language level migration"                      enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.nullCoalescing.NullCoalescingOperatorCanBeUsedInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="TypesCastingWithFunctionsInspection"           displayName="Type casting can be used"
        groupName="Language level migration"                      enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.TypesCastingWithFunctionsInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="dirnameCallOnFileConstantInspection"           displayName="__DIR__ constant can be used"
        groupName="Language level migration"                      enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.fileSystem.DirnameCallOnFileConstantInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ConstantCanBeUsedInspection"                   displayName="A constant can be used"
        groupName="Language level migration"                      enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.ConstantCanBeUsedInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="IsNullFunctionUsageInspection"                 displayName="'null === ...' can be used"
        groupName="Language level migration"                      enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.IsNullFunctionUsageInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ShortListSyntaxCanBeUsedInspection"            displayName="Short list syntax can be used"
        groupName="Language level migration"                      enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.ShortListSyntaxCanBeUsedInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="DeprecatedConstructorStyleInspection"          displayName="Deprecated constructor style"
        groupName="Language level migration"                      enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.classes.DeprecatedConstructorStyleInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="AliasFunctionsUsageInspection"                 displayName="Alias functions usage"
        groupName="Language level migration"                      enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.AliasFunctionsUsageInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ClassConstantCanBeUsedInspection"              displayName="::class can be used"
        groupName="Language level migration"                      enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.ClassConstantCanBeUsedInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="CascadingDirnameCallsInspection"               displayName="Cascading dirname(...) calls"
        groupName="Language level migration"                      enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.fileSystem.CascadingDirnameCallsInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="PowerOperatorCanBeUsedInspection"              displayName="Power operator can be used"
        groupName="Language level migration"                      enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.PowerOperatorCanBeUsedInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ArgumentUnpackingCanBeUsedInspection"          displayName="Argument unpacking can be used"
        groupName="Language level migration"                      enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.ArgumentUnpackingCanBeUsedInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ReturnTypeCanBeDeclaredInspection"             displayName="Return type hint can be used"
        groupName="Language level migration"                      enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.ReturnTypeCanBeDeclaredInspector"/>

    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="BadExceptionsProcessingInspection"               displayName="Badly organized exception handling"
        groupName="Architecture"                                    enabledByDefault="false" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeSmell.BadExceptionsProcessingInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="MoreThanThreeArgumentsInspection"                displayName="Too many parameters in a callable"
        groupName="Architecture"                                    enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeSmell.MoreThanThreeArgumentsInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="CallableParameterUseCaseInTypeContextInspection" displayName="Callable parameter usage violates definition"
        groupName="Architecture"                                    enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.CallableParameterUseCaseInTypeContextInspection"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ClassOverridesFieldOfSuperClassInspection"       displayName="Class overrides a field of a parent class"
        groupName="Architecture"                                    enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.classes.ClassOverridesFieldOfSuperClassInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="SingletonFactoryPatternViolationInspection"      displayName="Class violates singleton/factory pattern definition"
        groupName="Architecture"                                    enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.classes.SingletonFactoryPatternViolationInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="PrivateConstructorSemanticsInspection"           displayName="Private constructor semantics"
        groupName="Architecture"                                    enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.classes.PrivateConstructorSemanticsInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="LongInheritanceChainInspection"                  displayName="Long inheritance chain"
        groupName="Architecture"                                    enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.classes.LongInheritanceChainInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="PropertyCanBeStaticInspection"                   displayName="Property could be static"
        groupName="Architecture"                                    enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.classes.PropertyCanBeStaticInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="EmptyClassInspection"                            displayName="Empty class"
        groupName="Architecture"                                    enabledByDefault="false" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.classes.EmptyClassInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="OverridingDeprecatedMethodInspection"            displayName="Overriding deprecated methods"
        groupName="Architecture"                                    enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.classes.OverridingDeprecatedMethodInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="MultipleReturnStatementsInspection"              displayName="Multiple return statements usage"
        groupName="Architecture"                                    enabledByDefault="false" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeSmell.MultipleReturnStatementsInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
         shortName="ClassReImplementsParentInterfaceInspection"     displayName="Class implements interfaces multiple times"
         groupName="Architecture"                                   enabledByDefault="true" level="ERROR"
         implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.classes.ClassReImplementsParentInterfaceInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="LowerAccessLevelInspection"                      displayName="Declaration access can be weaker"
        groupName="Architecture"                                    enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.classes.lowerAccessLevel.LowerAccessLevelInspector"/>


    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="DeprecatedIniOptionsInspection"                  displayName="Deprecated configuration options"
        groupName="Compatibility"                                   enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeSmell.DeprecatedIniOptionsInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="RandomApiMigrationInspection"                    displayName="Random API migration"
        groupName="Compatibility"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.RandomApiMigrationInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="MktimeUsageInspection"                           displayName="'gmmktime(...)'/'mktime(...)' usage"
        groupName="Compatibility"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.dateTime.MktimeUsageInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="FopenBinaryUnsafeUsageInspection"                displayName="Binary-unsafe 'fopen(...)' usage"
        groupName="Compatibility"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.fileSystem.FopenBinaryUnsafeUsageInspector"/>



    <applicationService
            serviceInterface="com.kalessil.phpStorm.phpInspectionsEA.EASettings"
            serviceImplementation="com.kalessil.phpStorm.phpInspectionsEA.EASettings" />
  </extensions>

  <application-components>
      <component>
          <implementation-class>com.kalessil.phpStorm.phpInspectionsEA.EAApplicationComponent</implementation-class>
      </component>
  </application-components>

  <project-components>
      <component>
          <implementation-class>com.kalessil.phpStorm.phpInspectionsEA.EAUpdateComponent</implementation-class>
      </component>
  </project-components>

  <actions>
    <!-- Add your actions here -->
  </actions>

</idea-plugin>
