<idea-plugin require-restart="true">
  <id>com.kalessil.phpStorm.phpInspectionsEA</id>
  <name>Php Inspections (EA Extended)</name>
  <version>5.0.0.0</version>
  <vendor email="ea.inspections.team@gmail.com">EA Inspections Team</vendor>

  <depends>com.jetbrains.php</depends>
  <depends>com.intellij.modules.platform</depends>

  <!-- http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html for description -->
  <idea-version since-build="231" />

  <description><![CDATA[
  Replaced by description.html .....................
  ]]></description>

  <change-notes><![CDATA[
  Replaced by change-notes.html ....................
  ]]></change-notes>

  <extensions defaultExtensionNs="com.intellij">
    <!-- indexers -->

    <!-- inspections -->

    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="AmbiguousMethodsCallsInArrayMappingInspection" displayName="Non-optimized arrays mapping"
        groupName="Performance"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeStyle.AmbiguousMethodsCallsInArrayMappingInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="SlowArrayOperationsInLoopInspection"           displayName="Slow array function used in loop"
        groupName="Performance"                                   enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.arrays.SlowArrayOperationsInLoopInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="StrStrUsedAsStrPosInspection"                  displayName="'str(i)str(...)' could be replaced with 'str(i)pos(...)'"
        groupName="Performance"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.strings.StrStrUsedAsStrPosInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="CaseInsensitiveStringFunctionsMissUseInspection" displayName="'stristr(...)/stripos(...)/strripos(...)' could be replaced with 'strstr(...)/strpos()/strrpos()'"
        groupName="Performance"                                     enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.strings.CaseInsensitiveStringFunctionsMissUseInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="AlterInForeachInspection"                      displayName="Foreach variables reference usage correctness"
        groupName="Performance"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.forEach.AlterInForeachInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="CascadeStringReplacementInspection"            displayName="Cascading 'str_replace(...)' calls"
        groupName="Performance"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.strings.CascadeStringReplacementInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="InArrayMissUseInspection"                      displayName="'in_array(...)' misused"
        groupName="Performance"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.arrays.InArrayMissUseInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ArrayPushMissUseInspection"                    displayName="'array_push(...)' misused"
        groupName="Performance"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.arrays.ArrayPushMissUseInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="NotOptimalRegularExpressionsInspection"        displayName="Non-optimal regular expression"
        groupName="Performance"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.regularExpressions.NotOptimalRegularExpressionsInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="VariableFunctionsUsageInspection"              displayName="Variable functions usage"
        groupName="Performance"                                   enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.VariableFunctionsUsageInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="SubStrShortHandUsageInspection"                displayName="'substr(...)' short-hand usage"
        groupName="Performance"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.strings.SubStrShortHandUsageInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="SubStrUsedAsArrayAccessInspection"             displayName="'substr(...)' used as index-based access"
        groupName="Performance"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.strings.SubStrUsedAsArrayAccessInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="StrtotimeUsageInspection"                      displayName="'strtotime(...)' misused"
        groupName="Performance"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.dateTime.StrtotimeUsageInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="PackedHashtableOptimizationInspection"         displayName="Packed hashtable optimizations"
        groupName="Performance"                                   enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.PackedHashtableOptimizationInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="UnqualifiedReferenceInspection"                displayName="Unqualified function/constant reference"
        groupName="Performance"                                   enabledByDefault="false" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.UnqualifiedReferenceInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="FixedTimeStartWithInspection"                  displayName="Fixed-time string starts with checks"
        groupName="Performance"                                   enabledByDefault="false" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.strings.FixedTimeStartWithInspector"/>


    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="TypeUnsafeComparisonInspection"                displayName="Type unsafe comparison"
        groupName="Type compatibility"                            enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.TypeUnsafeComparisonInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="TypeUnsafeArraySearchInspection"               displayName="'in_array(...)', 'array_search(...)' type unsafe usage"
        groupName="Type compatibility"                            enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.arrays.TypeUnsafeArraySearchInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="JsonEncodingApiUsageInspection"                displayName="JSON encoding API usage"
        groupName="Type compatibility"                            enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.JsonEncodingApiUsageInspector"/>


    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="UnSafeIsSetOverArrayInspection"                displayName="'isset(...)' usage"
        groupName="Control Flow"                                  enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.UnSafeIsSetOverArrayInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="TernaryOperatorSimplifyInspection"             displayName="Ternary operator could be simplified"
        groupName="Control Flow"                                  enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.TernaryOperatorSimplifyInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="IfReturnReturnSimplificationInspection"        displayName="If-return-return could be simplified"
        groupName="Control Flow"                                  enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.ifs.IfReturnReturnSimplificationInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="NotOptimalIfConditionsInspection"              displayName="Non-optimal if conditions"
        groupName="Control Flow"                                  enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.ifs.NotOptimalIfConditionsInspection"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="LoopWhichDoesNotLoopInspection"                displayName="Loop which does not loop"
        groupName="Control Flow"                                  enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.loops.LoopWhichDoesNotLoopInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ThrowRawExceptionInspection"                   displayName="General exception is thrown"
        groupName="Control Flow"                                  enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.ThrowRawExceptionInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="DisconnectedForeachInstructionInspection"      displayName="Statement could be decoupled from foreach"
        groupName="Control Flow"                                  enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.forEach.DisconnectedForeachInstructionInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="DegradedSwitchInspection"                       displayName="Switch-case could be simplified"
        groupName="Control Flow"                                   enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalTransformations.DegradedSwitchInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ForeachInvariantsInspection"                    displayName="Foreach usage possible"
        groupName="Control Flow"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.forEach.ForeachInvariantsInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="OneTimeUseVariablesInspection"                  displayName="One-time use variables"
        groupName="Control Flow"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.OneTimeUseVariablesInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="PdoApiUsageInspection"                          displayName="PDO API usage"
        groupName="Control Flow"                                   enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.pdo.PdoApiUsageInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="MultiAssignmentUsageInspection"                 displayName="'list(...) = ' usage possible"
        groupName="Control Flow"                                   enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.MultiAssignmentUsageInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
         shortName="GetTypeMissUseInspection"                      displayName="'gettype(...)' could be replaced with 'is_*(...)'"
         groupName="Control Flow"                                  enabledByDefault="true" level="WARNING"
         implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.GetTypeMissUseInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
         shortName="ArraySearchUsedAsInArrayInspection"            displayName="'array_search(...)' could be replaced by 'in_array(...)'"
         groupName="Control Flow"                                  enabledByDefault="true" level="WARNING"
         implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.arrays.ArraySearchUsedAsInArrayInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
         shortName="StrTrUsageAsStrReplaceInspection"              displayName="'strtr(...)' could be replaced with 'str_replace(...)'"
         groupName="Control Flow"                                  enabledByDefault="true" level="WEAK WARNING"
         implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.strings.StrTrUsageAsStrReplaceInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
         shortName="SubStrUsedAsStrPosInspection"                  displayName="'substr(...)' could be replaced with 'strpos(...)'"
         groupName="Control Flow"                                  enabledByDefault="true" level="WEAK WARNING"
         implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.strings.SubStrUsedAsStrPosInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
         shortName="RedundantElseClauseInspection"                 displayName="Redundant 'else' keyword"
         groupName="Control Flow"                                  enabledByDefault="true" level="WARNING"
         implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.RedundantElseClauseInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
         shortName="StringNormalizationInspection"                 displayName="Strings normalization"
         groupName="Control Flow"                                  enabledByDefault="true" level="WEAK WARNING"
         implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.strings.StringNormalizationInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
         shortName="StringCaseManipulationInspection"              displayName="Unnecessary string case manipulation"
         groupName="Control Flow"                                  enabledByDefault="true" level="WEAK WARNING"
         implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.strings.StringCaseManipulationInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
         shortName="InvertedIfElseConstructsInspection"            displayName="Inverted 'if-else' constructs"
         groupName="Control Flow"                                  enabledByDefault="false" level="WEAK WARNING"
         implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.ifs.InvertedIfElseConstructsInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ArrayUniqueCanBeUsedInspection"                 displayName="'array_unique(...)' can be used"
        groupName="Control Flow"                                   enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.arrays.ArrayUniqueCanBeUsedInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="CompactCanBeUsedInspection"                     displayName="'compact(...)' can be used"
        groupName="Control Flow"                                   enabledByDefault="false" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.CompactCanBeUsedInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="IssetConstructsCanBeMergedInspection"           displayName="'isset(...)' constructs can be merged"
        groupName="Control Flow"                                   enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.IssetConstructsCanBeMergedInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="StrlenInEmptyStringCheckContextInspection"      displayName="'strlen(...)' misused"
        groupName="Control Flow"                                   enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalTransformations.StrlenInEmptyStringCheckContextInspection"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ObGetCleanCanBeUsedInspection"                  displayName="'ob_get_clean()' can be used"
        groupName="Control Flow"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.ObGetCleanCanBeUsedInspector"/>


    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ForgottenDebugOutputInspection"                displayName="Forgotten debug statements"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.debug.ForgottenDebugOutputInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="MagicMethodsValidityInspection"                displayName="Magic methods validity"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.magicMethods.MagicMethodsValidityInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="SuspiciousLoopInspection"                      displayName="Suspicious loop"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.loops.SuspiciousLoopInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="SwitchContinuationInLoopInspection"            displayName="Continue misbehaviour in switch"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.SwitchContinuationInLoopInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="PrintfScanfArgumentsInspection"                displayName="*printf/*scanf arguments count mismatches"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.PrintfScanfArgumentsInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="RealpathInStreamContextInspection"             displayName="Phar-incompatible 'realpath(...)' usage"
        groupName="Probable bugs"                                 enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.fileSystem.RealpathInStreamContextInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="OffsetOperationsInspection"                    displayName="Array and string offset validity"
        groupName="Probable bugs"                                 enabledByDefault="false" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.OffsetOperationsInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="MkdirRaceConditionInspection"                  displayName="'mkdir(...)' race condition"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.MkdirRaceConditionInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="IncorrectRandomRangeInspection"                displayName="Incorrect random generation range"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.IncorrectRandomRangeInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="SuspiciousSemicolonInspection"                 displayName="Suspicious semicolon"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.SuspiciousSemicolonInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="CompactArgumentsInspection"                    displayName="'compact(...)' variables existence"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.CompactArgumentsInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="UsingInclusionOnceReturnValueInspection"       displayName="Suspicious usage of include_once/require_once return value"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.UsingInclusionOnceReturnValueInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="DateIntervalSpecificationInspection"           displayName="Date interval specification validity"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.dateTime.DateIntervalSpecificationInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="PregQuoteUsageInspection"                      displayName="Proper preg_quote(...) usage"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.PregQuoteUsageInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="SuspiciousAssignmentsInspection"               displayName="Suspicious assignments"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.suspiciousAssignments.SuspiciousAssignmentsInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="DateTimeConstantsUsageInspection"              displayName="DateTime constants usage validity"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.dateTime.DateTimeConstantsUsageInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="SuspiciousReturnInspection"                    displayName="Suspicious returns"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.SuspiciousReturnInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="SuspiciousBinaryOperationInspection"           displayName="Suspicious binary operations"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.binaryOperations.SuspiciousBinaryOperationInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="TraitsPropertiesConflictsInspection"           displayName="Traits properties conflicts resolution"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.TraitsPropertiesConflictsInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="AutoloadingIssuesInspection"                   displayName="Class autoloading correctness"
        groupName="Probable bugs"                                 enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.classes.AutoloadingIssuesInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="NullPointerExceptionInspection"                displayName="Null reference"
        groupName="Probable bugs"                                 enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.npe.NullPointerExceptionInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="IssetArgumentExistenceInspection"              displayName="Isset operations variables existence"
        groupName="Probable bugs"                                 enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.nullCoalescing.IssetArgumentExistenceInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="MissingIssetImplementationInspection"          displayName="Empty/isset results correctness"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.classes.MissingIssetImplementationInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="CallableMethodValidityInspection"              displayName="Callable methods validity"
        groupName="Probable bugs"                                 enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.classes.CallableMethodValidityInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="PassingByReferenceCorrectnessInspection"       displayName="Passing arguments by reference correctness"
        groupName="Probable bugs"                                 enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.byReference.PassingByReferenceCorrectnessInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ClassMockingCorrectnessInspection"             displayName="Class mocking correctness"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.phpUnit.ClassMockingCorrectnessInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ClassConstantUsageCorrectnessInspection"       displayName="::class constant usage correctness"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.ClassConstantUsageCorrectnessInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="InfinityLoopInspection"                        displayName="Infinity loop detection"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.loops.InfinityLoopInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="StringsFirstCharactersCompareInspection"       displayName="Strings N-character comparison flaws"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.strings.StringsFirstCharactersCompareInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="SimpleXmlLoadFileUsageInspection"              displayName="'simplexml_load_file(...)' usage correctness"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.SimpleXmlLoadFileUsageInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="DateTimeSetTimeUsageInspection"                displayName="'DateTime::setTime(...)' usage correctness"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.dateTime.DateTimeSetTimeUsageInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="MissingArrayInitializationInspection"          displayName="Missing array initialization"
        groupName="Probable bugs"                                 enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.loops.MissingArrayInitializationInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="DuplicateArrayKeysInspection"                  displayName="Duplicate array keys"
        groupName="Probable bugs"                                 enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.DuplicateArrayKeysInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="SuspiciousFunctionCallsInspection"             displayName="Suspicious function calls"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.SuspiciousFunctionCallsInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="PreloadingUsageCorrectnessInspection"          displayName="Preloading usage correctness"
        groupName="Probable bugs"                                 enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.PreloadingUsageCorrectnessInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="StaticLambdaBindingInspection"                 displayName="Static lambdas binding"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.StaticLambdaBindingInspector"/>


    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
         shortName="NonSecureUniqidUsageInspection"                displayName="Insecure 'uniqid(...)' usage (Insufficient Entropy Vulnerability)"
         groupName="Security"                                      enabledByDefault="true" level="ERROR"
         implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.security.NonSecureUniqidUsageInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
         shortName="NonSecureParseStrUsageInspection"              displayName="Insecure 'parse_str(...)' usage (Variable extract Vulnerability)"
         groupName="Security"                                      enabledByDefault="true" level="ERROR"
         implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.security.NonSecureParseStrUsageInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
         shortName="UntrustedInclusionInspection"                  displayName="Untrusted files inclusion"
         groupName="Security"                                      enabledByDefault="false" level="ERROR"
         implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.security.UntrustedInclusionInspector"/>
    <localInspection language="JSON" groupPath="PHP,Php Inspections (EA Extended)"
         shortName="SecurityAdvisoriesInspection"                  displayName="Security advisories for Composer packages"
         groupName="Security"                                      enabledByDefault="true" level="WARNING"
         implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.security.SecurityAdvisoriesInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
         shortName="CurlSslServerSpoofingInspection"               displayName="CURL: SSL server spoofing (SSL MITM and Spoofing Attacks)"
         groupName="Security"                                      enabledByDefault="true" level="ERROR"
         implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.security.CurlSslServerSpoofingInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
         shortName="EncryptionInitializationVectorRandomnessInspection" displayName="Encryption initialization vector randomness"
         groupName="Security"                                           enabledByDefault="true" level="ERROR"
         implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.security.EncryptionInitializationVectorRandomnessInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
         shortName="UnserializeExploitsInspection"                 displayName="Exploiting unserialize (PHP Object Injection Vulnerability)"
         groupName="Security"                                      enabledByDefault="true" level="ERROR"
         implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.security.UnserializeExploitsInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
         shortName="PotentialMalwareInspection"                    displayName="Basic malware patterns"
         groupName="Security"                                      enabledByDefault="true" level="ERROR"
         implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.security.PotentialMalwareInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
         shortName="CryptographicallySecureRandomnessInspection"   displayName="Cryptographically secure randomness"
         groupName="Security"                                      enabledByDefault="true" level="ERROR"
         implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.security.CryptographicallySecureRandomnessInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
         shortName="CryptographicallySecureAlgorithmsInspection"   displayName="Cryptographically secure algorithms"
         groupName="Security"                                      enabledByDefault="true" level="ERROR"
         implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.security.CryptographicallySecureAlgorithmsInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
         shortName="HostnameSubstitutionInspection"                displayName="Hostname substitution"
         groupName="Security"                                      enabledByDefault="true" level="ERROR"
         implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.security.HostnameSubstitutionInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
         shortName="BacktickOperatorUsageInspection"               displayName="Backtick operator usage"
         groupName="Security"                                      enabledByDefault="true" level="WARNING"
         implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.BacktickOperatorUsageInspector"/>


    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="PhpUnitTestsInspection"                        displayName="PHPUnit: bugs and best practices"
        groupName="PHPUnit"                                       enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.phpUnit.PhpUnitTestsInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="UnnecessaryAssertionInspection"                displayName="PHPUnit: unnecessary assertion"
        groupName="PHPUnit"                                       enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.phpUnit.UnnecessaryAssertionInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="MockingMethodsCorrectnessInspection"           displayName="PHPUnit: methods mocking issues"
        groupName="PHPUnit"                                       enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.phpUnit.MockingMethodsCorrectnessInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="PhpUnitDeprecationsInspection"                 displayName="PHPUnit: API deprecations"
        groupName="PHPUnit"                                       enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.phpUnit.PhpUnitDeprecationsInspector"/>


    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="SenselessTernaryOperatorInspection"            displayName="Suspicious ternary operator"
        groupName="Confusing constructs"                          enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalTransformations.SenselessTernaryOperatorInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ClassMethodNameMatchesFieldNameInspection"     displayName="Method name matches existing field name"
        groupName="Confusing constructs"                          enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.classes.ClassMethodNameMatchesFieldNameInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="NestedTernaryOperatorInspection"               displayName="Nested ternary operator"
        groupName="Confusing constructs"                          enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalTransformations.NestedTernaryOperatorInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="UselessReturnInspection"                       displayName="Useless return"
        groupName="Confusing constructs"                          enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.UselessReturnInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ReferencingObjectsInspection"                  displayName="Referencing objects"
        groupName="Confusing constructs"                          enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeStyle.ReferencingObjectsInspector"/>


    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="OnlyWritesOnParameterInspection"               displayName="Parameter/variable is not used"
        groupName="Unused"                                        enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.OnlyWritesOnParameterInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="PropertyInitializationFlawsInspection"         displayName="Class property initialization flaws"
        groupName="Unused"                                        enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.PropertyInitializationFlawsInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="UselessUnsetInspection"                        displayName="Useless unset"
        groupName="Unused"                                        enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.UselessUnsetInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="UnusedConstructorDependenciesInspection"       displayName="Unused constructor dependencies"
        groupName="Unused"                                        enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.classes.UnusedConstructorDependenciesInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="SenselessProxyMethodInspection"                displayName="Senseless proxy function"
        groupName="Unused"                                        enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.classes.SenselessProxyMethodInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="SenselessMethodDuplicationInspection"          displayName="Child method is exactly the same"
        groupName="Unused"                                        enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.classes.SenselessMethodDuplicationInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="UnusedGotoLabelInspection"                     displayName="Unused goto labels"
        groupName="Unused"                                        enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeStyle.UnusedGotoLabelInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="UnnecessaryIssetArgumentsInspection"           displayName="Unnecessary isset arguments specification"
        groupName="Unused"                                        enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.UnnecessaryIssetArgumentsInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="DateUsageInspection"                           displayName="Unnecessary 'date(...)' arguments specification"
        groupName="Unused"                                        enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.dateTime.DateUsageInspector"/>


    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="UnNecessaryDoubleQuotesInspection"             displayName="Unnecessary double quotes"
        groupName="Code Style"                                    enabledByDefault="false" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeStyle.UnNecessaryDoubleQuotesInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="MissingOrEmptyGroupStatementInspection"        displayName="Missing or empty conditionals group statement"
        groupName="Code Style"                                    enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeStyle.MissingOrEmptyGroupStatementInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="AccessModifierPresentedInspection"             displayName="Access modifiers shall be defined"
        groupName="Code Style"                                    enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.classes.AccessModifierPresentedInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="IncrementDecrementOperationEquivalentInspection" displayName="Increment/decrement operation equivalent"
        groupName="Code Style"                                      enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalTransformations.IncrementDecrementOperationEquivalentInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="NestedPositiveIfStatementsInspection"          displayName="Nested positive ifs"
        groupName="Code Style"                                    enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.ifs.NestedPositiveIfStatementsInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="StaticInvocationViaThisInspection"             displayName="Static methods invocation via '->'"
        groupName="Code Style"                                    enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.StaticInvocationViaThisInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="DynamicInvocationViaScopeResolutionInspection" displayName="Dynamic methods invocation via '::'"
        groupName="Code Style"                                    enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.DynamicInvocationViaScopeResolutionInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="NestedNotOperatorsInspection"                  displayName="Nested not operators usage"
        groupName="Code Style"                                    enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeStyle.NestedNotOperatorsInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="UnnecessarySemicolonInspection"                displayName="Unnecessary semicolon"
        groupName="Code Style"                                    enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeStyle.UnnecessarySemicolonInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="UnnecessaryUseAliasInspection"                 displayName="Unnecessary use aliases"
        groupName="Code Style"                                    enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeStyle.UnnecessaryUseAliasInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="UsingInclusionReturnValueInspection"           displayName="Usage of inclusion return value"
        groupName="Code Style"                                    enabledByDefault="false" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeStyle.UsingInclusionReturnValueInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="OpAssignShortSyntaxInspection"                 displayName="Short syntax for applied operation"
        groupName="Code Style"                                    enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.OpAssignShortSyntaxInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="UnnecessaryFinalModifierInspection"            displayName="Unnecessary final modifiers"
        groupName="Code Style"                                    enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeStyle.UnnecessaryFinalModifierInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="UnknownInspectionInspection"                   displayName="Unknown inspection suppression"
        groupName="Code Style"                                    enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.phpDoc.UnknownInspectionInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ShortOpenTagUsageInspection"                   displayName="PHP short open tag usage"
        groupName="Code Style"                                    enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeStyle.ShortOpenTagUsageInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ComparisonOperandsOrderInspection"             displayName="Yoda/regular conditions style usage"
        groupName="Code Style"                                    enabledByDefault="false" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeStyle.ComparisonOperandsOrderInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ParameterDefaultValueIsNotNullInspection"      displayName="Non-null parameters default value"
        groupName="Code Style"                                    enabledByDefault="false" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeStyle.ParameterDefaultValueIsNotNullInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="DisallowWritingIntoStaticPropertiesInspection" displayName="Disallow writing into static properties"
        groupName="Code Style"                                    enabledByDefault="false" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeStyle.DisallowWritingIntoStaticPropertiesInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="MisorderedModifiersInspection"                 displayName="PSR-compliant modifiers order"
        groupName="Code Style"                                    enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeStyle.MisorderedModifiersInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="UnnecessaryCastingInspection"                  displayName="Unnecessary type casting"
        groupName="Code Style"                                    enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeStyle.UnnecessaryCastingInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="SelfClassReferencingInspection"                displayName="Self class referencing"
        groupName="Code Style"                                    enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeStyle.SelfClassReferencingInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="MissUsingParentKeywordInspection"              displayName="'parent' keyword misused"
        groupName="Code Style"                                    enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeStyle.MissUsingParentKeywordInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="NestedAssignmentsUsageInspection"              displayName="Nested assignments usage"
        groupName="Code Style"                                    enabledByDefault="false" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeStyle.NestedAssignmentsUsageInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ProperNullCoalescingOperatorUsageInspection"   displayName="Proper null-coalescing operator usage"
        groupName="Code Style"                                    enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeStyle.ProperNullCoalescingOperatorUsageInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="StaticClosureCanBeUsedInspection"              displayName="Static closure can be used"
        groupName="Code Style"                                    enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeStyle.StaticClosureCanBeUsedInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ImplodeArgumentsOrderInspection"               displayName="'implode(...)' arguments order"
        groupName="Code Style"                                    enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.arrays.ImplodeArgumentsOrderInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ShortEchoTagCanBeUsedInspection"               displayName="Short echo tag can be used"
        groupName="Code Style"                                    enabledByDefault="false" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeStyle.ShortEchoTagCanBeUsedInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="IsNullFunctionUsageInspection"                 displayName="'null === ...' can be used"
        groupName="Code Style"                                    enabledByDefault="false" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.IsNullFunctionUsageInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="UnsetConstructsCanBeMergedInspection"          displayName="'unset(...)' constructs can be merged"
        groupName="Code Style"                                    enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.UnsetConstructsCanBeMergedInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="IsEmptyFunctionUsageInspection"                displayName="'empty(...)' usage"
        groupName="Code Style"                                    enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.IsEmptyFunctionUsageInspector"/>


    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ElvisOperatorCanBeUsedInspection"              displayName="Elvis operator can be used"
        groupName="Language level migration"                      enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.ElvisOperatorCanBeUsedInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="NullCoalescingOperatorCanBeUsedInspection"     displayName="Null coalescing operator can be used"
        groupName="Language level migration"                      enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.nullCoalescing.NullCoalescingOperatorCanBeUsedInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="TypesCastingCanBeUsedInspection"               displayName="Type casting can be used"
        groupName="Language level migration"                      enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.TypesCastingCanBeUsedInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="DirectoryConstantCanBeUsedInspection"          displayName="__DIR__ constant can be used"
        groupName="Language level migration"                      enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.fileSystem.DirectoryConstantCanBeUsedInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ConstantCanBeUsedInspection"                   displayName="A constant can be used"
        groupName="Language level migration"                      enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.ConstantCanBeUsedInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ShortListSyntaxCanBeUsedInspection"            displayName="Short list syntax can be used"
        groupName="Language level migration"                      enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.ShortListSyntaxCanBeUsedInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="DeprecatedConstructorStyleInspection"          displayName="Deprecated constructor style"
        groupName="Language level migration"                      enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.classes.DeprecatedConstructorStyleInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="AliasFunctionsUsageInspection"                 displayName="Alias functions usage"
        groupName="Language level migration"                      enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.deprecations.AliasFunctionsUsageInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ClassConstantCanBeUsedInspection"              displayName="::class can be used"
        groupName="Language level migration"                      enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.ClassConstantCanBeUsedInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="CascadingDirnameCallsInspection"               displayName="Cascading dirname(...) calls"
        groupName="Language level migration"                      enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.fileSystem.CascadingDirnameCallsInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="PowerOperatorCanBeUsedInspection"              displayName="Power operator can be used"
        groupName="Language level migration"                      enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.PowerOperatorCanBeUsedInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ArgumentUnpackingCanBeUsedInspection"          displayName="Argument unpacking can be used"
        groupName="Language level migration"                      enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.ArgumentUnpackingCanBeUsedInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ReturnTypeCanBeDeclaredInspection"             displayName="Return type hint can be used"
        groupName="Language level migration"                      enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.ReturnTypeCanBeDeclaredInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="GetClassUsageInspection"                       displayName="'get_class(...)' usage correctness"
        groupName="Language level migration"                      enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.deprecations.GetClassUsageInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="UnsupportedStringOffsetOperationsInspection"   displayName="Unsupported string offset operations"
        groupName="Language level migration"                      enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.UnsupportedStringOffsetOperationsInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="InstanceofCanBeUsedInspection"                 displayName="'instanceof' can be used"
        groupName="Language level migration"                      enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.InstanceofCanBeUsedInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="DynamicCallsToScopeIntrospectionInspection"    displayName="Deprecated dynamic calls to scope introspection"
        groupName="Language level migration"                      enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.deprecations.DynamicCallsToScopeIntrospectionInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="UnsupportedEmptyListAssignmentsInspection"     displayName="Unsupported empty list assignments"
        groupName="Language level migration"                      enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.UnsupportedEmptyListAssignmentsInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="IsIterableCanBeUsedInspection"                 displayName="'is_iterable(...)' can be used"
        groupName="Language level migration"                      enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.IsIterableCanBeUsedInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="IsCountableCanBeUsedInspection"                displayName="'is_countable(...)' can be used"
        groupName="Language level migration"                      enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.IsCountableCanBeUsedInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="StrContainsCanBeUsedInspection"                displayName="'str_contains(...)' can be used"
        groupName="Language level migration"                      enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.strings.StrContainsCanBeUsedInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="StrStartsWithCanBeUsedInspection"              displayName="'str_starts_with(...)' can be used"
        groupName="Language level migration"                      enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.strings.StrStartsWithCanBeUsedInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="StrEndsWithCanBeUsedInspection"                displayName="'str_ends_with(...)' can be used"
        groupName="Language level migration"                      enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.strings.StrEndsWithCanBeUsedInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="GetDebugTypeCanBeUsedInspection"               displayName="'get_debug_type(...)' can be used"
        groupName="Language level migration"                      enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.debug.GetDebugTypeCanBeUsedInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ArrayIsListCanBeUsedInspection"                displayName="'array_is_list(...)' can be used"
        groupName="Language level migration"                      enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.arrays.ArrayIsListCanBeUsedInspector"/>


    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="BadExceptionsProcessingInspection"               displayName="Badly organized exception handling"
        groupName="Architecture"                                    enabledByDefault="false" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeStyle.BadExceptionsProcessingInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="CallableParameterUseCaseInTypeContextInspection" displayName="Callable parameter usage violates definition"
        groupName="Architecture"                                    enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.CallableParameterUseCaseInTypeContextInspection"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ClassOverridesFieldOfSuperClassInspection"       displayName="Class overrides a field of a parent class"
        groupName="Architecture"                                    enabledByDefault="false" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.classes.ClassOverridesFieldOfSuperClassInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="LongInheritanceChainInspection"                  displayName="Long inheritance chain"
        groupName="Architecture"                                    enabledByDefault="false" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.classes.LongInheritanceChainInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="PropertyCanBeStaticInspection"                   displayName="Property could be static"
        groupName="Architecture"                                    enabledByDefault="false" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.classes.PropertyCanBeStaticInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="EmptyClassInspection"                            displayName="Empty class"
        groupName="Architecture"                                    enabledByDefault="false" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.classes.EmptyClassInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="MultipleReturnStatementsInspection"              displayName="Multiple return statements usage"
        groupName="Architecture"                                    enabledByDefault="false" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeStyle.MultipleReturnStatementsInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
         shortName="ClassReImplementsParentInterfaceInspection"     displayName="Class implements interfaces multiple times"
         groupName="Architecture"                                   enabledByDefault="true" level="WARNING"
         implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.classes.ClassReImplementsParentInterfaceInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="EfferentObjectCouplingInspection"                displayName="Efferent coupling between objects"
        groupName="Architecture"                                    enabledByDefault="false" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeStyle.EfferentObjectCouplingInspector"/>


    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="DeprecatedIniOptionsInspection"                  displayName="Deprecated configuration options"
        groupName="Compatibility"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeStyle.DeprecatedIniOptionsInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="RandomApiMigrationInspection"                    displayName="Random API migration"
        groupName="Compatibility"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.deprecations.RandomApiMigrationInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="MktimeUsageInspection"                           displayName="'gmmktime(...)'/'mktime(...)' usage"
        groupName="Compatibility"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.deprecations.MktimeUsageInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="FopenBinaryUnsafeUsageInspection"                displayName="Binary-unsafe 'fopen(...)' usage"
        groupName="Compatibility"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.fileSystem.FopenBinaryUnsafeUsageInspector"/>


    <applicationService serviceImplementation="com.kalessil.phpStorm.phpInspectionsEA.EASettings"/>
    <applicationConfigurable instance="com.kalessil.phpStorm.phpInspectionsEA.EAApplicationConfiguration"/>
    <errorHandler implementation="com.kalessil.phpStorm.phpInspectionsEA.EAErrorReporter"/>
    <postStartupActivity implementation="com.kalessil.phpStorm.phpInspectionsEA.EAStartupActivity"/>
    <notificationGroup id="Php Inspections (EA Extended) Update Notification" displayType="STICKY_BALLOON"/>
  </extensions>

  <actions>
    <!-- Add your actions here -->
  </actions>
</idea-plugin>
